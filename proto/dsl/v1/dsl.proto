syntax = "proto3";
package dsl.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "proto/dsl/v1";

message Validation {
  string id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"price\""}
  ];
  repeated string cels = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"number % 3 == 0 || number < 5\""}
  ];
  repeated Variable variables = 3 [(google.api.field_behavior) = REQUIRED];
}

message Variable {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"number\""}
  ];
  string type = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"int\""}
  ];
}

message RegisterRequest {
  repeated Validation validations = 1;
}

message RegisterResponse {}

message ReadRequest {}

message ReadResponse {
  repeated Validation validations = 1;
}

service DSLService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/dsl"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Register DSL"
      tags: ["DSL"]
      operation_id: "Register"
    };
  }
  rpc Read(ReadRequest) returns (ReadResponse) {
    option (google.api.http) = {get: "/v1/dsl"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Read DSL"
      tags: ["DSL"]
      operation_id: "Read"
    };
  }
}
