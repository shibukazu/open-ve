syntax = "proto3";
package validate.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "proto/validate/v1";

message CheckRequest {
  repeated Validation validations = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "[{\"id\": \"item\", \"variables\": {\"price\": -100, \"image\": \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAADElEQVR4nGO4unY2AAR4Ah51j5XwAAAAAElFTkSuQmCC\"}}]"}
  ];
}

message Validation {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  map<string, google.protobuf.Any> variables = 2 [(google.api.field_behavior) = REQUIRED];
}

message CheckResponse {
  repeated ValidationResult results = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "[{\"id\": \"item\", \"is_valid\": false, \"message\": \"failed validations: price > 0\"}]"}
  ];
}

message ValidationResult {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  bool is_valid = 2 [(google.api.field_behavior) = REQUIRED];
  string message = 3 [(google.api.field_behavior) = REQUIRED];
}

service ValidateService {
  rpc Check(CheckRequest) returns (CheckResponse) {
    option (google.api.http) = {
      post: "/v1/check"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Check validation"
      tags: ["Validation"]
      operation_id: "Check"
    };
  }
}
